
Projeto Roboldinho Gaucho.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  00000bf4  00000c88  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bf4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000061  00800122  00800122  00000caa  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000caa  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000180  00000000  00000000  00000d06  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001238  00000000  00000000  00000e86  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000533  00000000  00000000  000020be  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000631  00000000  00000000  000025f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000354  00000000  00000000  00002c24  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000089d  00000000  00000000  00002f78  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005d0  00000000  00000000  00003815  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000150  00000000  00000000  00003de5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 b6 02 	jmp	0x56c	; 0x56c <__vector_4>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 fc 02 	jmp	0x5f8	; 0x5f8 <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 00 01 	jmp	0x200	; 0x200 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 ef       	ldi	r30, 0xF4	; 244
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 32       	cpi	r26, 0x22	; 34
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e2       	ldi	r26, 0x22	; 34
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a3 38       	cpi	r26, 0x83	; 131
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 f8 05 	jmp	0xbf0	; 0xbf0 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
ISR(ADC_vect);

int main(void)
{
	//EU QUE FIZ AE AE
	usartEnableTransmitter();
  a6:	e1 ec       	ldi	r30, 0xC1	; 193
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	88 60       	ori	r24, 0x08	; 8
  ae:	80 83       	st	Z, r24
  b0:	e3 e7       	ldi	r30, 0x73	; 115
  b2:	f1 e0       	ldi	r31, 0x01	; 1
  b4:	80 81       	ld	r24, Z
  b6:	80 64       	ori	r24, 0x40	; 64
  b8:	80 83       	st	Z, r24
	usartStdio();
  ba:	80 e0       	ldi	r24, 0x00	; 0
  bc:	91 e0       	ldi	r25, 0x01	; 1
  be:	90 93 82 01 	sts	0x0182, r25
  c2:	80 93 81 01 	sts	0x0181, r24
  c6:	90 93 80 01 	sts	0x0180, r25
  ca:	80 93 7f 01 	sts	0x017F, r24
  ce:	90 93 7e 01 	sts	0x017E, r25
  d2:	80 93 7d 01 	sts	0x017D, r24
	usartInit(9600);
  d6:	60 e8       	ldi	r22, 0x80	; 128
  d8:	75 e2       	ldi	r23, 0x25	; 37
  da:	80 e0       	ldi	r24, 0x00	; 0
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	0e 94 8a 01 	call	0x314	; 0x314 <usartInit>
	
	// Configuração dos motores
	motorCfg();
  e2:	0e 94 5d 02 	call	0x4ba	; 0x4ba <motorCfg>
	
	//ADC CONFIG
	adcReferenceAvcc();
  e6:	4c e7       	ldi	r20, 0x7C	; 124
  e8:	50 e0       	ldi	r21, 0x00	; 0
  ea:	ea 01       	movw	r28, r20
  ec:	88 81       	ld	r24, Y
  ee:	8f 77       	andi	r24, 0x7F	; 127
  f0:	88 83       	st	Y, r24
  f2:	88 81       	ld	r24, Y
  f4:	80 64       	ori	r24, 0x40	; 64
  f6:	88 83       	st	Y, r24
  f8:	a7 e7       	ldi	r26, 0x77	; 119
  fa:	b1 e0       	ldi	r27, 0x01	; 1
  fc:	8c 91       	ld	r24, X
  fe:	8c 7f       	andi	r24, 0xFC	; 252
 100:	81 60       	ori	r24, 0x01	; 1
 102:	8c 93       	st	X, r24
	adcClockPrescaler128();
 104:	ea e7       	ldi	r30, 0x7A	; 122
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	80 81       	ld	r24, Z
 10a:	84 60       	ori	r24, 0x04	; 4
 10c:	80 83       	st	Z, r24
 10e:	80 81       	ld	r24, Z
 110:	82 60       	ori	r24, 0x02	; 2
 112:	80 83       	st	Z, r24
 114:	80 81       	ld	r24, Z
 116:	81 60       	ori	r24, 0x01	; 1
 118:	80 83       	st	Z, r24
 11a:	8c 91       	ld	r24, X
 11c:	8c 61       	ori	r24, 0x1C	; 28
 11e:	8c 93       	st	X, r24
	adcEnableAutomaticMode();
 120:	80 81       	ld	r24, Z
 122:	80 62       	ori	r24, 0x20	; 32
 124:	80 83       	st	Z, r24
 126:	8c 91       	ld	r24, X
 128:	80 62       	ori	r24, 0x20	; 32
 12a:	8c 93       	st	X, r24
	adcTriggerTimer1Overflow();
 12c:	8b e7       	ldi	r24, 0x7B	; 123
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	ec 01       	movw	r28, r24
 132:	28 81       	ld	r18, Y
 134:	24 60       	ori	r18, 0x04	; 4
 136:	28 83       	st	Y, r18
 138:	28 81       	ld	r18, Y
 13a:	22 60       	ori	r18, 0x02	; 2
 13c:	28 83       	st	Y, r18
 13e:	28 81       	ld	r18, Y
 140:	2e 7f       	andi	r18, 0xFE	; 254
 142:	28 83       	st	Y, r18
 144:	8c 91       	ld	r24, X
 146:	8f 73       	andi	r24, 0x3F	; 63
 148:	80 68       	ori	r24, 0x80	; 128
 14a:	8c 93       	st	X, r24
 14c:	88 e7       	ldi	r24, 0x78	; 120
 14e:	91 e0       	ldi	r25, 0x01	; 1
 150:	ec 01       	movw	r28, r24
 152:	28 81       	ld	r18, Y
 154:	21 60       	ori	r18, 0x01	; 1
 156:	28 83       	st	Y, r18
	adcSelectChannel(ADC4);
 158:	ea 01       	movw	r28, r20
 15a:	38 81       	ld	r19, Y
 15c:	30 7f       	andi	r19, 0xF0	; 240
 15e:	34 60       	ori	r19, 0x04	; 4
 160:	38 83       	st	Y, r19
 162:	23 7c       	andi	r18, 0xC3	; 195
 164:	20 61       	ori	r18, 0x10	; 16
 166:	ec 01       	movw	r28, r24
 168:	28 83       	st	Y, r18
	adcActivateInterrupt();
 16a:	80 81       	ld	r24, Z
 16c:	88 60       	ori	r24, 0x08	; 8
 16e:	80 83       	st	Z, r24
 170:	c9 e7       	ldi	r28, 0x79	; 121
 172:	d1 e0       	ldi	r29, 0x01	; 1
 174:	88 81       	ld	r24, Y
 176:	80 62       	ori	r24, 0x20	; 32
 178:	88 83       	st	Y, r24
	adcEnable();
 17a:	90 81       	ld	r25, Z
 17c:	90 68       	ori	r25, 0x80	; 128
 17e:	90 83       	st	Z, r25
 180:	80 61       	ori	r24, 0x10	; 16
 182:	88 83       	st	Y, r24
	
	adcDisableAutomaticMode();
 184:	90 81       	ld	r25, Z
 186:	9f 7d       	andi	r25, 0xDF	; 223
 188:	90 83       	st	Z, r25
 18a:	9c 91       	ld	r25, X
 18c:	9f 7d       	andi	r25, 0xDF	; 223
 18e:	9c 93       	st	X, r25
	adcDeactivateInterrupt();
 190:	90 81       	ld	r25, Z
 192:	97 7f       	andi	r25, 0xF7	; 247
 194:	90 83       	st	Z, r25
 196:	8f 7d       	andi	r24, 0xDF	; 223
 198:	88 83       	st	Y, r24
	adcDisable();
 19a:	90 81       	ld	r25, Z
 19c:	9f 77       	andi	r25, 0x7F	; 127
 19e:	90 83       	st	Z, r25
 1a0:	8f 7e       	andi	r24, 0xEF	; 239
 1a2:	88 83       	st	Y, r24
	
	// Configuração do Timer1
	timer1CTCMode();
 1a4:	e1 e8       	ldi	r30, 0x81	; 129
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	80 81       	ld	r24, Z
 1aa:	8f 7e       	andi	r24, 0xEF	; 239
 1ac:	80 83       	st	Z, r24
 1ae:	80 81       	ld	r24, Z
 1b0:	88 60       	ori	r24, 0x08	; 8
 1b2:	80 83       	st	Z, r24
 1b4:	a0 e8       	ldi	r26, 0x80	; 128
 1b6:	b0 e0       	ldi	r27, 0x00	; 0
 1b8:	8c 91       	ld	r24, X
 1ba:	8d 7f       	andi	r24, 0xFD	; 253
 1bc:	8c 93       	st	X, r24
 1be:	8c 91       	ld	r24, X
 1c0:	8e 7f       	andi	r24, 0xFE	; 254
 1c2:	8c 93       	st	X, r24
	timer1ClockPrescaller1024();
 1c4:	80 81       	ld	r24, Z
 1c6:	84 60       	ori	r24, 0x04	; 4
 1c8:	80 83       	st	Z, r24
 1ca:	80 81       	ld	r24, Z
 1cc:	8d 7f       	andi	r24, 0xFD	; 253
 1ce:	80 83       	st	Z, r24
 1d0:	80 81       	ld	r24, Z
 1d2:	81 60       	ori	r24, 0x01	; 1
 1d4:	80 83       	st	Z, r24
	timer1SetCompareAValue(135);
 1d6:	87 e8       	ldi	r24, 0x87	; 135
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	0e 94 82 01 	call	0x304	; 0x304 <timer1SetCompareAValue>
	timer1DeactivateCompareAInterrupt();
 1de:	ef e6       	ldi	r30, 0x6F	; 111
 1e0:	f0 e0       	ldi	r31, 0x00	; 0
 1e2:	80 81       	ld	r24, Z
 1e4:	8d 7f       	andi	r24, 0xFD	; 253
 1e6:	80 83       	st	Z, r24
	timer1ActivateOverflowInterrupt();
 1e8:	80 81       	ld	r24, Z
 1ea:	81 60       	ori	r24, 0x01	; 1
 1ec:	80 83       	st	Z, r24
	
	timer1DeactivateOverflowInterrupt();
 1ee:	80 81       	ld	r24, Z
 1f0:	8e 7f       	andi	r24, 0xFE	; 254
 1f2:	80 83       	st	Z, r24
	
	// Configuração do Timer2
	
	sei();
 1f4:	78 94       	sei
	
    while(1)
	{
		//_delay_ms(1);
		setMotor1Speed(30);
 1f6:	8e e1       	ldi	r24, 0x1E	; 30
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	0e 94 a5 02 	call	0x54a	; 0x54a <setMotor1Speed>
 1fe:	fb cf       	rjmp	.-10     	; 0x1f6 <main+0x150>

00000200 <__vector_21>:
		
    }
}

ISR(ADC_vect)
{
 200:	1f 92       	push	r1
 202:	0f 92       	push	r0
 204:	0f b6       	in	r0, 0x3f	; 63
 206:	0f 92       	push	r0
 208:	11 24       	eor	r1, r1
 20a:	2f 93       	push	r18
 20c:	3f 93       	push	r19
 20e:	4f 93       	push	r20
 210:	5f 93       	push	r21
 212:	6f 93       	push	r22
 214:	7f 93       	push	r23
 216:	8f 93       	push	r24
 218:	9f 93       	push	r25
 21a:	af 93       	push	r26
 21c:	bf 93       	push	r27
 21e:	ef 93       	push	r30
 220:	ff 93       	push	r31
	VelocidadeX++;
 222:	80 91 22 01 	lds	r24, 0x0122
 226:	90 91 23 01 	lds	r25, 0x0123
 22a:	01 96       	adiw	r24, 0x01	; 1
 22c:	90 93 23 01 	sts	0x0123, r25
 230:	80 93 22 01 	sts	0x0122, r24
	if(curADC == ADC_ADC4)
 234:	80 91 24 01 	lds	r24, 0x0124
 238:	81 11       	cpse	r24, r1
 23a:	18 c0       	rjmp	.+48     	; 0x26c <__vector_21+0x6c>
	{
		VelocidadeX = ADC;
 23c:	80 91 78 00 	lds	r24, 0x0078
 240:	90 91 79 00 	lds	r25, 0x0079
 244:	90 93 23 01 	sts	0x0123, r25
 248:	80 93 22 01 	sts	0x0122, r24
		adcSelectChannel(ADC5);
 24c:	ec e7       	ldi	r30, 0x7C	; 124
 24e:	f0 e0       	ldi	r31, 0x00	; 0
 250:	80 81       	ld	r24, Z
 252:	80 7f       	andi	r24, 0xF0	; 240
 254:	85 60       	ori	r24, 0x05	; 5
 256:	80 83       	st	Z, r24
 258:	e8 e7       	ldi	r30, 0x78	; 120
 25a:	f1 e0       	ldi	r31, 0x01	; 1
 25c:	80 81       	ld	r24, Z
 25e:	83 7c       	andi	r24, 0xC3	; 195
 260:	84 61       	ori	r24, 0x14	; 20
 262:	80 83       	st	Z, r24
		curADC = ADC_ADC5;
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	80 93 24 01 	sts	0x0124, r24
 26a:	1a c0       	rjmp	.+52     	; 0x2a0 <__vector_21+0xa0>
	}
	else if(curADC == ADC_ADC5)
 26c:	80 91 24 01 	lds	r24, 0x0124
 270:	81 30       	cpi	r24, 0x01	; 1
 272:	b1 f4       	brne	.+44     	; 0x2a0 <__vector_21+0xa0>
	{
		VelocidadeX = ADC;	
 274:	80 91 78 00 	lds	r24, 0x0078
 278:	90 91 79 00 	lds	r25, 0x0079
 27c:	90 93 23 01 	sts	0x0123, r25
 280:	80 93 22 01 	sts	0x0122, r24
		adcSelectChannel(ADC4);
 284:	ec e7       	ldi	r30, 0x7C	; 124
 286:	f0 e0       	ldi	r31, 0x00	; 0
 288:	80 81       	ld	r24, Z
 28a:	80 7f       	andi	r24, 0xF0	; 240
 28c:	84 60       	ori	r24, 0x04	; 4
 28e:	80 83       	st	Z, r24
 290:	e8 e7       	ldi	r30, 0x78	; 120
 292:	f1 e0       	ldi	r31, 0x01	; 1
 294:	80 81       	ld	r24, Z
 296:	83 7c       	andi	r24, 0xC3	; 195
 298:	80 61       	ori	r24, 0x10	; 16
 29a:	80 83       	st	Z, r24
		curADC = ADC_ADC4;
 29c:	10 92 24 01 	sts	0x0124, r1
	}
	
	printf("FUDEU FUDEU FUDEU \r");
 2a0:	8e e0       	ldi	r24, 0x0E	; 14
 2a2:	91 e0       	ldi	r25, 0x01	; 1
 2a4:	9f 93       	push	r25
 2a6:	8f 93       	push	r24
 2a8:	0e 94 35 03 	call	0x66a	; 0x66a <printf>
	
	timer1ClearOverflowInterruptRequest();
 2ac:	b0 9a       	sbi	0x16, 0	; 22
	adcClearInterruptRequest();
 2ae:	ea e7       	ldi	r30, 0x7A	; 122
 2b0:	f0 e0       	ldi	r31, 0x00	; 0
 2b2:	80 81       	ld	r24, Z
 2b4:	80 61       	ori	r24, 0x10	; 16
 2b6:	80 83       	st	Z, r24
 2b8:	0f 90       	pop	r0
 2ba:	0f 90       	pop	r0
}
 2bc:	ff 91       	pop	r31
 2be:	ef 91       	pop	r30
 2c0:	bf 91       	pop	r27
 2c2:	af 91       	pop	r26
 2c4:	9f 91       	pop	r25
 2c6:	8f 91       	pop	r24
 2c8:	7f 91       	pop	r23
 2ca:	6f 91       	pop	r22
 2cc:	5f 91       	pop	r21
 2ce:	4f 91       	pop	r20
 2d0:	3f 91       	pop	r19
 2d2:	2f 91       	pop	r18
 2d4:	0f 90       	pop	r0
 2d6:	0f be       	out	0x3f, r0	; 63
 2d8:	0f 90       	pop	r0
 2da:	1f 90       	pop	r1
 2dc:	18 95       	reti

000002de <usartTransmitStd>:
 2de:	e0 ec       	ldi	r30, 0xC0	; 192
 2e0:	f0 e0       	ldi	r31, 0x00	; 0
 2e2:	90 81       	ld	r25, Z
 2e4:	95 ff       	sbrs	r25, 5
 2e6:	fd cf       	rjmp	.-6      	; 0x2e2 <usartTransmitStd+0x4>
 2e8:	80 93 c6 00 	sts	0x00C6, r24
 2ec:	80 e0       	ldi	r24, 0x00	; 0
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	08 95       	ret

000002f2 <usartReceiveStd>:
 2f2:	e0 ec       	ldi	r30, 0xC0	; 192
 2f4:	f0 e0       	ldi	r31, 0x00	; 0
 2f6:	80 81       	ld	r24, Z
 2f8:	88 23       	and	r24, r24
 2fa:	ec f7       	brge	.-6      	; 0x2f6 <usartReceiveStd+0x4>
 2fc:	80 91 c6 00 	lds	r24, 0x00C6
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	08 95       	ret

00000304 <timer1SetCompareAValue>:
 304:	2f b7       	in	r18, 0x3f	; 63
 306:	f8 94       	cli
 308:	90 93 89 00 	sts	0x0089, r25
 30c:	80 93 88 00 	sts	0x0088, r24
 310:	2f bf       	out	0x3f, r18	; 63
 312:	08 95       	ret

00000314 <usartInit>:
 314:	9b 01       	movw	r18, r22
 316:	ac 01       	movw	r20, r24
 318:	e0 ec       	ldi	r30, 0xC0	; 192
 31a:	f0 e0       	ldi	r31, 0x00	; 0
 31c:	80 81       	ld	r24, Z
 31e:	83 7e       	andi	r24, 0xE3	; 227
 320:	80 83       	st	Z, r24
 322:	e3 e7       	ldi	r30, 0x73	; 115
 324:	f1 e0       	ldi	r31, 0x01	; 1
 326:	80 81       	ld	r24, Z
 328:	87 7e       	andi	r24, 0xE7	; 231
 32a:	8f 7d       	andi	r24, 0xDF	; 223
 32c:	80 83       	st	Z, r24
 32e:	83 70       	andi	r24, 0x03	; 3
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	82 30       	cpi	r24, 0x02	; 2
 334:	91 05       	cpc	r25, r1
 336:	09 f4       	brne	.+2      	; 0x33a <usartInit+0x26>
 338:	4c c0       	rjmp	.+152    	; 0x3d2 <usartInit+0xbe>
 33a:	83 30       	cpi	r24, 0x03	; 3
 33c:	91 05       	cpc	r25, r1
 33e:	09 f4       	brne	.+2      	; 0x342 <usartInit+0x2e>
 340:	65 c0       	rjmp	.+202    	; 0x40c <usartInit+0xf8>
 342:	01 97       	sbiw	r24, 0x01	; 1
 344:	19 f1       	breq	.+70     	; 0x38c <usartInit+0x78>
 346:	e0 ec       	ldi	r30, 0xC0	; 192
 348:	f0 e0       	ldi	r31, 0x00	; 0
 34a:	80 81       	ld	r24, Z
 34c:	8d 7f       	andi	r24, 0xFD	; 253
 34e:	80 83       	st	Z, r24
 350:	e2 ec       	ldi	r30, 0xC2	; 194
 352:	f0 e0       	ldi	r31, 0x00	; 0
 354:	80 81       	ld	r24, Z
 356:	8e 7f       	andi	r24, 0xFE	; 254
 358:	80 83       	st	Z, r24
 35a:	80 81       	ld	r24, Z
 35c:	8f 77       	andi	r24, 0x7F	; 127
 35e:	80 83       	st	Z, r24
 360:	80 81       	ld	r24, Z
 362:	8f 7b       	andi	r24, 0xBF	; 191
 364:	80 83       	st	Z, r24
 366:	60 e4       	ldi	r22, 0x40	; 64
 368:	72 e4       	ldi	r23, 0x42	; 66
 36a:	8f e0       	ldi	r24, 0x0F	; 15
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	0e 94 13 03 	call	0x626	; 0x626 <__udivmodsi4>
 372:	21 50       	subi	r18, 0x01	; 1
 374:	31 09       	sbc	r19, r1
 376:	20 93 75 01 	sts	0x0175, r18
 37a:	e6 e7       	ldi	r30, 0x76	; 118
 37c:	f1 e0       	ldi	r31, 0x01	; 1
 37e:	93 2f       	mov	r25, r19
 380:	9f 70       	andi	r25, 0x0F	; 15
 382:	80 81       	ld	r24, Z
 384:	80 7f       	andi	r24, 0xF0	; 240
 386:	89 2b       	or	r24, r25
 388:	80 83       	st	Z, r24
 38a:	6e c0       	rjmp	.+220    	; 0x468 <usartInit+0x154>
 38c:	e0 ec       	ldi	r30, 0xC0	; 192
 38e:	f0 e0       	ldi	r31, 0x00	; 0
 390:	80 81       	ld	r24, Z
 392:	82 60       	ori	r24, 0x02	; 2
 394:	80 83       	st	Z, r24
 396:	e2 ec       	ldi	r30, 0xC2	; 194
 398:	f0 e0       	ldi	r31, 0x00	; 0
 39a:	80 81       	ld	r24, Z
 39c:	8e 7f       	andi	r24, 0xFE	; 254
 39e:	80 83       	st	Z, r24
 3a0:	80 81       	ld	r24, Z
 3a2:	8f 77       	andi	r24, 0x7F	; 127
 3a4:	80 83       	st	Z, r24
 3a6:	80 81       	ld	r24, Z
 3a8:	8f 7b       	andi	r24, 0xBF	; 191
 3aa:	80 83       	st	Z, r24
 3ac:	60 e8       	ldi	r22, 0x80	; 128
 3ae:	74 e8       	ldi	r23, 0x84	; 132
 3b0:	8e e1       	ldi	r24, 0x1E	; 30
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	0e 94 13 03 	call	0x626	; 0x626 <__udivmodsi4>
 3b8:	21 50       	subi	r18, 0x01	; 1
 3ba:	31 09       	sbc	r19, r1
 3bc:	20 93 75 01 	sts	0x0175, r18
 3c0:	e6 e7       	ldi	r30, 0x76	; 118
 3c2:	f1 e0       	ldi	r31, 0x01	; 1
 3c4:	93 2f       	mov	r25, r19
 3c6:	9f 70       	andi	r25, 0x0F	; 15
 3c8:	80 81       	ld	r24, Z
 3ca:	80 7f       	andi	r24, 0xF0	; 240
 3cc:	89 2b       	or	r24, r25
 3ce:	80 83       	st	Z, r24
 3d0:	4b c0       	rjmp	.+150    	; 0x468 <usartInit+0x154>
 3d2:	e0 ec       	ldi	r30, 0xC0	; 192
 3d4:	f0 e0       	ldi	r31, 0x00	; 0
 3d6:	80 81       	ld	r24, Z
 3d8:	8d 7f       	andi	r24, 0xFD	; 253
 3da:	80 83       	st	Z, r24
 3dc:	80 91 73 01 	lds	r24, 0x0173
 3e0:	82 ff       	sbrs	r24, 2
 3e2:	06 c0       	rjmp	.+12     	; 0x3f0 <usartInit+0xdc>
 3e4:	e2 ec       	ldi	r30, 0xC2	; 194
 3e6:	f0 e0       	ldi	r31, 0x00	; 0
 3e8:	80 81       	ld	r24, Z
 3ea:	81 60       	ori	r24, 0x01	; 1
 3ec:	80 83       	st	Z, r24
 3ee:	05 c0       	rjmp	.+10     	; 0x3fa <usartInit+0xe6>
 3f0:	e2 ec       	ldi	r30, 0xC2	; 194
 3f2:	f0 e0       	ldi	r31, 0x00	; 0
 3f4:	80 81       	ld	r24, Z
 3f6:	8e 7f       	andi	r24, 0xFE	; 254
 3f8:	80 83       	st	Z, r24
 3fa:	e2 ec       	ldi	r30, 0xC2	; 194
 3fc:	f0 e0       	ldi	r31, 0x00	; 0
 3fe:	80 81       	ld	r24, Z
 400:	8f 77       	andi	r24, 0x7F	; 127
 402:	80 83       	st	Z, r24
 404:	80 81       	ld	r24, Z
 406:	80 64       	ori	r24, 0x40	; 64
 408:	80 83       	st	Z, r24
 40a:	2e c0       	rjmp	.+92     	; 0x468 <usartInit+0x154>
 40c:	e0 ec       	ldi	r30, 0xC0	; 192
 40e:	f0 e0       	ldi	r31, 0x00	; 0
 410:	80 81       	ld	r24, Z
 412:	8d 7f       	andi	r24, 0xFD	; 253
 414:	80 83       	st	Z, r24
 416:	80 91 73 01 	lds	r24, 0x0173
 41a:	82 ff       	sbrs	r24, 2
 41c:	06 c0       	rjmp	.+12     	; 0x42a <usartInit+0x116>
 41e:	e2 ec       	ldi	r30, 0xC2	; 194
 420:	f0 e0       	ldi	r31, 0x00	; 0
 422:	80 81       	ld	r24, Z
 424:	81 60       	ori	r24, 0x01	; 1
 426:	80 83       	st	Z, r24
 428:	05 c0       	rjmp	.+10     	; 0x434 <usartInit+0x120>
 42a:	e2 ec       	ldi	r30, 0xC2	; 194
 42c:	f0 e0       	ldi	r31, 0x00	; 0
 42e:	80 81       	ld	r24, Z
 430:	8e 7f       	andi	r24, 0xFE	; 254
 432:	80 83       	st	Z, r24
 434:	e2 ec       	ldi	r30, 0xC2	; 194
 436:	f0 e0       	ldi	r31, 0x00	; 0
 438:	80 81       	ld	r24, Z
 43a:	80 68       	ori	r24, 0x80	; 128
 43c:	80 83       	st	Z, r24
 43e:	80 81       	ld	r24, Z
 440:	80 64       	ori	r24, 0x40	; 64
 442:	80 83       	st	Z, r24
 444:	60 e0       	ldi	r22, 0x00	; 0
 446:	72 e1       	ldi	r23, 0x12	; 18
 448:	8a e7       	ldi	r24, 0x7A	; 122
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	0e 94 13 03 	call	0x626	; 0x626 <__udivmodsi4>
 450:	21 50       	subi	r18, 0x01	; 1
 452:	31 09       	sbc	r19, r1
 454:	20 93 75 01 	sts	0x0175, r18
 458:	e6 e7       	ldi	r30, 0x76	; 118
 45a:	f1 e0       	ldi	r31, 0x01	; 1
 45c:	93 2f       	mov	r25, r19
 45e:	9f 70       	andi	r25, 0x0F	; 15
 460:	80 81       	ld	r24, Z
 462:	80 7f       	andi	r24, 0xF0	; 240
 464:	89 2b       	or	r24, r25
 466:	80 83       	st	Z, r24
 468:	80 91 76 01 	lds	r24, 0x0176
 46c:	98 2f       	mov	r25, r24
 46e:	9f 70       	andi	r25, 0x0F	; 15
 470:	90 93 c5 00 	sts	0x00C5, r25
 474:	90 91 75 01 	lds	r25, 0x0175
 478:	90 93 c4 00 	sts	0x00C4, r25
 47c:	85 ff       	sbrs	r24, 5
 47e:	0a c0       	rjmp	.+20     	; 0x494 <usartInit+0x180>
 480:	e1 ec       	ldi	r30, 0xC1	; 193
 482:	f0 e0       	ldi	r31, 0x00	; 0
 484:	80 81       	ld	r24, Z
 486:	80 68       	ori	r24, 0x80	; 128
 488:	80 83       	st	Z, r24
 48a:	e4 e7       	ldi	r30, 0x74	; 116
 48c:	f1 e0       	ldi	r31, 0x01	; 1
 48e:	80 81       	ld	r24, Z
 490:	82 60       	ori	r24, 0x02	; 2
 492:	80 83       	st	Z, r24
 494:	08 95       	ret

00000496 <motorCtrlCfg>:
	
}

void motorCtrlCfg()
{
	setBit(MOTOR_CONTROL_DDR, MOTOR1_CONTROL_PWM_PIN);
 496:	55 9a       	sbi	0x0a, 5	; 10
	setBit(MOTOR_CONTROL_DDR, MOTOR2_CONTROL_PWM_PIN);
 498:	56 9a       	sbi	0x0a, 6	; 10
	setBit(MOTOR_CONTROL_DDR, MOTOR1_CONTROL_SENTIDO_PIN);
 49a:	53 9a       	sbi	0x0a, 3	; 10
	setBit(MOTOR_CONTROL_DDR, MOTOR2_CONTROL_SENTIDO_PIN);
 49c:	54 9a       	sbi	0x0a, 4	; 10
	
	clrBit(MOTOR_CONTROL_PORT, MOTOR1_CONTROL_PWM_PIN);
 49e:	5d 98       	cbi	0x0b, 5	; 11
	clrBit(MOTOR_CONTROL_PORT, MOTOR2_CONTROL_PWM_PIN);
 4a0:	5e 98       	cbi	0x0b, 6	; 11
	clrBit(MOTOR_CONTROL_PORT, MOTOR1_CONTROL_SENTIDO_PIN);
 4a2:	5b 98       	cbi	0x0b, 3	; 11
	clrBit(MOTOR_CONTROL_PORT, MOTOR2_CONTROL_SENTIDO_PIN);
 4a4:	5c 98       	cbi	0x0b, 4	; 11
 4a6:	08 95       	ret

000004a8 <motorDataCfg>:
}

void motorDataCfg()
{
	clrBit(MOTOR_DATA_DDR, MOTOR1_DATA_E0_PIN);
 4a8:	38 98       	cbi	0x07, 0	; 7
	clrBit(MOTOR_DATA_DDR, MOTOR1_DATA_E1_PIN);
 4aa:	39 98       	cbi	0x07, 1	; 7
	clrBit(MOTOR_DATA_DDR, MOTOR2_DATA_E0_PIN);
 4ac:	3a 98       	cbi	0x07, 2	; 7
	clrBit(MOTOR_DATA_DDR, MOTOR2_DATA_E1_PIN);
 4ae:	3c 98       	cbi	0x07, 4	; 7
	
	clrBit(MOTOR_DATA_PORT, MOTOR1_DATA_E0_PIN);
 4b0:	40 98       	cbi	0x08, 0	; 8
	clrBit(MOTOR_DATA_PORT, MOTOR1_DATA_E1_PIN);
 4b2:	41 98       	cbi	0x08, 1	; 8
	clrBit(MOTOR_DATA_PORT, MOTOR2_DATA_E0_PIN);
 4b4:	42 98       	cbi	0x08, 2	; 8
	clrBit(MOTOR_DATA_PORT, MOTOR2_DATA_E1_PIN);
 4b6:	44 98       	cbi	0x08, 4	; 8
 4b8:	08 95       	ret

000004ba <motorCfg>:
#include "Motor.h"

void motorCfg()
{
	// Configuração dos motores
	motorCtrlCfg();
 4ba:	0e 94 4b 02 	call	0x496	; 0x496 <motorCtrlCfg>
	motorDataCfg();
 4be:	0e 94 54 02 	call	0x4a8	; 0x4a8 <motorDataCfg>
	
	// Configuração do Timer0 - ~1kHz
	timer0FastPWMMaxMode();
 4c2:	85 b5       	in	r24, 0x25	; 37
 4c4:	87 7f       	andi	r24, 0xF7	; 247
 4c6:	85 bd       	out	0x25, r24	; 37
 4c8:	84 b5       	in	r24, 0x24	; 36
 4ca:	82 60       	ori	r24, 0x02	; 2
 4cc:	84 bd       	out	0x24, r24	; 36
 4ce:	84 b5       	in	r24, 0x24	; 36
 4d0:	81 60       	ori	r24, 0x01	; 1
 4d2:	84 bd       	out	0x24, r24	; 36
	timer0ClockPrescaller64();
 4d4:	85 b5       	in	r24, 0x25	; 37
 4d6:	8b 7f       	andi	r24, 0xFB	; 251
 4d8:	85 bd       	out	0x25, r24	; 37
 4da:	85 b5       	in	r24, 0x25	; 37
 4dc:	82 60       	ori	r24, 0x02	; 2
 4de:	85 bd       	out	0x25, r24	; 37
 4e0:	85 b5       	in	r24, 0x25	; 37
 4e2:	81 60       	ori	r24, 0x01	; 1
 4e4:	85 bd       	out	0x25, r24	; 37
	timer0OC0ANonInvertedMode();
 4e6:	84 b5       	in	r24, 0x24	; 36
 4e8:	80 68       	ori	r24, 0x80	; 128
 4ea:	84 bd       	out	0x24, r24	; 36
 4ec:	84 b5       	in	r24, 0x24	; 36
 4ee:	8f 7b       	andi	r24, 0xBF	; 191
 4f0:	84 bd       	out	0x24, r24	; 36
	timer0OC0BNonInvertedMode();
 4f2:	84 b5       	in	r24, 0x24	; 36
 4f4:	80 62       	ori	r24, 0x20	; 32
 4f6:	84 bd       	out	0x24, r24	; 36
 4f8:	84 b5       	in	r24, 0x24	; 36
 4fa:	8f 7e       	andi	r24, 0xEF	; 239
 4fc:	84 bd       	out	0x24, r24	; 36
	timer0SetCompareAValue(0);
 4fe:	17 bc       	out	0x27, r1	; 39
	timer0SetCompareBValue(0);
 500:	18 bc       	out	0x28, r1	; 40
	timer0DeactivateCompareAInterrupt();
 502:	ee e6       	ldi	r30, 0x6E	; 110
 504:	f0 e0       	ldi	r31, 0x00	; 0
 506:	80 81       	ld	r24, Z
 508:	8d 7f       	andi	r24, 0xFD	; 253
 50a:	80 83       	st	Z, r24
	timer0DeactivateCompareBInterrupt();
 50c:	80 81       	ld	r24, Z
 50e:	8b 7f       	andi	r24, 0xFB	; 251
 510:	80 83       	st	Z, r24
	timer0ActivateOverflowInterrupt();
 512:	80 81       	ld	r24, Z
 514:	81 60       	ori	r24, 0x01	; 1
 516:	80 83       	st	Z, r24
	
	
	//timeSinceStart = 0;
	motor1Info.timeSinceRead = 0;
 518:	10 92 2f 01 	sts	0x012F, r1
 51c:	10 92 30 01 	sts	0x0130, r1
 520:	10 92 31 01 	sts	0x0131, r1
 524:	10 92 32 01 	sts	0x0132, r1
	motor2Info.timeSinceRead = 0;
 528:	10 92 3b 01 	sts	0x013B, r1
 52c:	10 92 3c 01 	sts	0x013C, r1
 530:	10 92 3d 01 	sts	0x013D, r1
 534:	10 92 3e 01 	sts	0x013E, r1
	
	motor1Info.anguloAtual = 0;
 538:	10 92 28 01 	sts	0x0128, r1
 53c:	10 92 27 01 	sts	0x0127, r1
	motor2Info.anguloAtual = 0;
 540:	10 92 34 01 	sts	0x0134, r1
 544:	10 92 33 01 	sts	0x0133, r1
 548:	08 95       	ret

0000054a <setMotor1Speed>:
	clrBit(MOTOR_DATA_PORT, MOTOR2_DATA_E1_PIN);
}

void setMotor1Speed(int Speed)
{
	if((Speed >= 0) && (Speed <= 255))
 54a:	28 2f       	mov	r18, r24
 54c:	39 2f       	mov	r19, r25
 54e:	2f 3f       	cpi	r18, 0xFF	; 255
 550:	31 05       	cpc	r19, r1
 552:	09 f0       	breq	.+2      	; 0x556 <setMotor1Speed+0xc>
 554:	10 f4       	brcc	.+4      	; 0x55a <setMotor1Speed+0x10>
	{
		clrBit(MOTOR_CONTROL_PORT, MOTOR1_CONTROL_SENTIDO_PIN);
 556:	5b 98       	cbi	0x0b, 3	; 11
		timer0SetCompareBValue(Speed);
 558:	88 bd       	out	0x28, r24	; 40
	}
	
	if((Speed < 0) && (Speed >= -255))
 55a:	21 50       	subi	r18, 0x01	; 1
 55c:	3f 4f       	sbci	r19, 0xFF	; 255
 55e:	2f 3f       	cpi	r18, 0xFF	; 255
 560:	31 05       	cpc	r19, r1
 562:	18 f4       	brcc	.+6      	; 0x56a <setMotor1Speed+0x20>
	{
		setBit(MOTOR_CONTROL_PORT, MOTOR1_CONTROL_SENTIDO_PIN);
 564:	5b 9a       	sbi	0x0b, 3	; 11
		timer0SetCompareBValue(255 + Speed);
 566:	81 50       	subi	r24, 0x01	; 1
 568:	88 bd       	out	0x28, r24	; 40
 56a:	08 95       	ret

0000056c <__vector_4>:
{
	
}

ISR(PCINT1_vect)
{
 56c:	1f 92       	push	r1
 56e:	0f 92       	push	r0
 570:	0f b6       	in	r0, 0x3f	; 63
 572:	0f 92       	push	r0
 574:	11 24       	eor	r1, r1
 576:	8f 93       	push	r24
 578:	9f 93       	push	r25
	if(motor1Info.enc0Atual != isBitSet(MOTOR_DATA_PIN, MOTOR1_DATA_E0_PIN))
 57a:	80 91 2a 01 	lds	r24, 0x012A
 57e:	96 b1       	in	r25, 0x06	; 6
 580:	91 70       	andi	r25, 0x01	; 1
 582:	89 17       	cp	r24, r25
 584:	31 f0       	breq	.+12     	; 0x592 <__vector_4+0x26>
	{
		motor1Info.enc0Anterior = motor1Info.enc0Atual;
 586:	80 93 29 01 	sts	0x0129, r24
		motor1Info.enc0Atual = isBitSet(MOTOR_DATA_PIN, MOTOR1_DATA_E0_PIN);
 58a:	86 b1       	in	r24, 0x06	; 6
 58c:	81 70       	andi	r24, 0x01	; 1
 58e:	80 93 2a 01 	sts	0x012A, r24
		
		calcSpeedMotor1();
	}
	
	if(motor1Info.enc1Atual != isBitSet(MOTOR_DATA_PIN, MOTOR1_DATA_E1_PIN))
 592:	80 91 2c 01 	lds	r24, 0x012C
 596:	96 b1       	in	r25, 0x06	; 6
 598:	96 95       	lsr	r25
 59a:	91 70       	andi	r25, 0x01	; 1
 59c:	98 17       	cp	r25, r24
 59e:	39 f0       	breq	.+14     	; 0x5ae <__vector_4+0x42>
	{
		motor1Info.enc1Anterior = motor1Info.enc1Atual;
 5a0:	80 93 2b 01 	sts	0x012B, r24
		motor1Info.enc1Atual = isBitSet(MOTOR_DATA_PIN, MOTOR1_DATA_E1_PIN);
 5a4:	86 b1       	in	r24, 0x06	; 6
 5a6:	86 95       	lsr	r24
 5a8:	81 70       	andi	r24, 0x01	; 1
 5aa:	80 93 2c 01 	sts	0x012C, r24
		
		calcSpeedMotor1();
	}
	
	if(motor2Info.enc0Atual != isBitSet(MOTOR_DATA_PIN, MOTOR2_DATA_E0_PIN))
 5ae:	80 91 36 01 	lds	r24, 0x0136
 5b2:	96 b1       	in	r25, 0x06	; 6
 5b4:	92 fb       	bst	r25, 2
 5b6:	99 27       	eor	r25, r25
 5b8:	90 f9       	bld	r25, 0
 5ba:	98 17       	cp	r25, r24
 5bc:	41 f0       	breq	.+16     	; 0x5ce <__vector_4+0x62>
	{
		motor2Info.enc0Anterior = motor2Info.enc0Atual;
 5be:	80 93 35 01 	sts	0x0135, r24
		motor2Info.enc0Atual = isBitSet(MOTOR_DATA_PIN, MOTOR2_DATA_E0_PIN);
 5c2:	86 b1       	in	r24, 0x06	; 6
 5c4:	82 fb       	bst	r24, 2
 5c6:	88 27       	eor	r24, r24
 5c8:	80 f9       	bld	r24, 0
 5ca:	80 93 36 01 	sts	0x0136, r24
		
		calcSpeedMotor2();
	}
	
	if(motor2Info.enc1Atual != isBitSet(MOTOR_DATA_PIN, MOTOR2_DATA_E1_PIN))
 5ce:	80 91 38 01 	lds	r24, 0x0138
 5d2:	96 b1       	in	r25, 0x06	; 6
 5d4:	92 95       	swap	r25
 5d6:	91 70       	andi	r25, 0x01	; 1
 5d8:	98 17       	cp	r25, r24
 5da:	39 f0       	breq	.+14     	; 0x5ea <__vector_4+0x7e>
	{
		motor2Info.enc1Anterior = motor2Info.enc1Atual;
 5dc:	80 93 37 01 	sts	0x0137, r24
		motor2Info.enc1Atual = isBitSet(MOTOR_DATA_PIN, MOTOR2_DATA_E1_PIN);
 5e0:	86 b1       	in	r24, 0x06	; 6
 5e2:	82 95       	swap	r24
 5e4:	81 70       	andi	r24, 0x01	; 1
 5e6:	80 93 38 01 	sts	0x0138, r24
		
		calcSpeedMotor2();
	}
}
 5ea:	9f 91       	pop	r25
 5ec:	8f 91       	pop	r24
 5ee:	0f 90       	pop	r0
 5f0:	0f be       	out	0x3f, r0	; 63
 5f2:	0f 90       	pop	r0
 5f4:	1f 90       	pop	r1
 5f6:	18 95       	reti

000005f8 <__vector_16>:


ISR(TIMER0_OVF_vect)
{
 5f8:	1f 92       	push	r1
 5fa:	0f 92       	push	r0
 5fc:	0f b6       	in	r0, 0x3f	; 63
 5fe:	0f 92       	push	r0
 600:	11 24       	eor	r1, r1
 602:	8f 93       	push	r24
 604:	9f 93       	push	r25
	timeSinceStart++;
 606:	80 91 25 01 	lds	r24, 0x0125
 60a:	90 91 26 01 	lds	r25, 0x0126
 60e:	01 96       	adiw	r24, 0x01	; 1
 610:	90 93 26 01 	sts	0x0126, r25
 614:	80 93 25 01 	sts	0x0125, r24
 618:	9f 91       	pop	r25
 61a:	8f 91       	pop	r24
 61c:	0f 90       	pop	r0
 61e:	0f be       	out	0x3f, r0	; 63
 620:	0f 90       	pop	r0
 622:	1f 90       	pop	r1
 624:	18 95       	reti

00000626 <__udivmodsi4>:
 626:	a1 e2       	ldi	r26, 0x21	; 33
 628:	1a 2e       	mov	r1, r26
 62a:	aa 1b       	sub	r26, r26
 62c:	bb 1b       	sub	r27, r27
 62e:	fd 01       	movw	r30, r26
 630:	0d c0       	rjmp	.+26     	; 0x64c <__udivmodsi4_ep>

00000632 <__udivmodsi4_loop>:
 632:	aa 1f       	adc	r26, r26
 634:	bb 1f       	adc	r27, r27
 636:	ee 1f       	adc	r30, r30
 638:	ff 1f       	adc	r31, r31
 63a:	a2 17       	cp	r26, r18
 63c:	b3 07       	cpc	r27, r19
 63e:	e4 07       	cpc	r30, r20
 640:	f5 07       	cpc	r31, r21
 642:	20 f0       	brcs	.+8      	; 0x64c <__udivmodsi4_ep>
 644:	a2 1b       	sub	r26, r18
 646:	b3 0b       	sbc	r27, r19
 648:	e4 0b       	sbc	r30, r20
 64a:	f5 0b       	sbc	r31, r21

0000064c <__udivmodsi4_ep>:
 64c:	66 1f       	adc	r22, r22
 64e:	77 1f       	adc	r23, r23
 650:	88 1f       	adc	r24, r24
 652:	99 1f       	adc	r25, r25
 654:	1a 94       	dec	r1
 656:	69 f7       	brne	.-38     	; 0x632 <__udivmodsi4_loop>
 658:	60 95       	com	r22
 65a:	70 95       	com	r23
 65c:	80 95       	com	r24
 65e:	90 95       	com	r25
 660:	9b 01       	movw	r18, r22
 662:	ac 01       	movw	r20, r24
 664:	bd 01       	movw	r22, r26
 666:	cf 01       	movw	r24, r30
 668:	08 95       	ret

0000066a <printf>:
 66a:	a0 e0       	ldi	r26, 0x00	; 0
 66c:	b0 e0       	ldi	r27, 0x00	; 0
 66e:	eb e3       	ldi	r30, 0x3B	; 59
 670:	f3 e0       	ldi	r31, 0x03	; 3
 672:	0c 94 d1 05 	jmp	0xba2	; 0xba2 <__prologue_saves__+0x20>
 676:	fe 01       	movw	r30, r28
 678:	35 96       	adiw	r30, 0x05	; 5
 67a:	61 91       	ld	r22, Z+
 67c:	71 91       	ld	r23, Z+
 67e:	af 01       	movw	r20, r30
 680:	80 91 7f 01 	lds	r24, 0x017F
 684:	90 91 80 01 	lds	r25, 0x0180
 688:	0e 94 49 03 	call	0x692	; 0x692 <vfprintf>
 68c:	e2 e0       	ldi	r30, 0x02	; 2
 68e:	0c 94 ed 05 	jmp	0xbda	; 0xbda <__epilogue_restores__+0x20>

00000692 <vfprintf>:
 692:	ac e0       	ldi	r26, 0x0C	; 12
 694:	b0 e0       	ldi	r27, 0x00	; 0
 696:	ef e4       	ldi	r30, 0x4F	; 79
 698:	f3 e0       	ldi	r31, 0x03	; 3
 69a:	0c 94 c1 05 	jmp	0xb82	; 0xb82 <__prologue_saves__>
 69e:	7c 01       	movw	r14, r24
 6a0:	6b 01       	movw	r12, r22
 6a2:	8a 01       	movw	r16, r20
 6a4:	fc 01       	movw	r30, r24
 6a6:	17 82       	std	Z+7, r1	; 0x07
 6a8:	16 82       	std	Z+6, r1	; 0x06
 6aa:	83 81       	ldd	r24, Z+3	; 0x03
 6ac:	81 ff       	sbrs	r24, 1
 6ae:	bd c1       	rjmp	.+890    	; 0xa2a <__stack+0x12b>
 6b0:	ce 01       	movw	r24, r28
 6b2:	01 96       	adiw	r24, 0x01	; 1
 6b4:	4c 01       	movw	r8, r24
 6b6:	f7 01       	movw	r30, r14
 6b8:	93 81       	ldd	r25, Z+3	; 0x03
 6ba:	f6 01       	movw	r30, r12
 6bc:	93 fd       	sbrc	r25, 3
 6be:	85 91       	lpm	r24, Z+
 6c0:	93 ff       	sbrs	r25, 3
 6c2:	81 91       	ld	r24, Z+
 6c4:	6f 01       	movw	r12, r30
 6c6:	88 23       	and	r24, r24
 6c8:	09 f4       	brne	.+2      	; 0x6cc <vfprintf+0x3a>
 6ca:	ab c1       	rjmp	.+854    	; 0xa22 <__stack+0x123>
 6cc:	85 32       	cpi	r24, 0x25	; 37
 6ce:	39 f4       	brne	.+14     	; 0x6de <vfprintf+0x4c>
 6d0:	93 fd       	sbrc	r25, 3
 6d2:	85 91       	lpm	r24, Z+
 6d4:	93 ff       	sbrs	r25, 3
 6d6:	81 91       	ld	r24, Z+
 6d8:	6f 01       	movw	r12, r30
 6da:	85 32       	cpi	r24, 0x25	; 37
 6dc:	29 f4       	brne	.+10     	; 0x6e8 <vfprintf+0x56>
 6de:	b7 01       	movw	r22, r14
 6e0:	90 e0       	ldi	r25, 0x00	; 0
 6e2:	0e 94 31 05 	call	0xa62	; 0xa62 <fputc>
 6e6:	e7 cf       	rjmp	.-50     	; 0x6b6 <vfprintf+0x24>
 6e8:	51 2c       	mov	r5, r1
 6ea:	31 2c       	mov	r3, r1
 6ec:	20 e0       	ldi	r18, 0x00	; 0
 6ee:	20 32       	cpi	r18, 0x20	; 32
 6f0:	a0 f4       	brcc	.+40     	; 0x71a <vfprintf+0x88>
 6f2:	8b 32       	cpi	r24, 0x2B	; 43
 6f4:	69 f0       	breq	.+26     	; 0x710 <vfprintf+0x7e>
 6f6:	30 f4       	brcc	.+12     	; 0x704 <vfprintf+0x72>
 6f8:	80 32       	cpi	r24, 0x20	; 32
 6fa:	59 f0       	breq	.+22     	; 0x712 <vfprintf+0x80>
 6fc:	83 32       	cpi	r24, 0x23	; 35
 6fe:	69 f4       	brne	.+26     	; 0x71a <vfprintf+0x88>
 700:	20 61       	ori	r18, 0x10	; 16
 702:	2c c0       	rjmp	.+88     	; 0x75c <vfprintf+0xca>
 704:	8d 32       	cpi	r24, 0x2D	; 45
 706:	39 f0       	breq	.+14     	; 0x716 <vfprintf+0x84>
 708:	80 33       	cpi	r24, 0x30	; 48
 70a:	39 f4       	brne	.+14     	; 0x71a <vfprintf+0x88>
 70c:	21 60       	ori	r18, 0x01	; 1
 70e:	26 c0       	rjmp	.+76     	; 0x75c <vfprintf+0xca>
 710:	22 60       	ori	r18, 0x02	; 2
 712:	24 60       	ori	r18, 0x04	; 4
 714:	23 c0       	rjmp	.+70     	; 0x75c <vfprintf+0xca>
 716:	28 60       	ori	r18, 0x08	; 8
 718:	21 c0       	rjmp	.+66     	; 0x75c <vfprintf+0xca>
 71a:	27 fd       	sbrc	r18, 7
 71c:	27 c0       	rjmp	.+78     	; 0x76c <vfprintf+0xda>
 71e:	30 ed       	ldi	r19, 0xD0	; 208
 720:	38 0f       	add	r19, r24
 722:	3a 30       	cpi	r19, 0x0A	; 10
 724:	78 f4       	brcc	.+30     	; 0x744 <vfprintf+0xb2>
 726:	26 ff       	sbrs	r18, 6
 728:	06 c0       	rjmp	.+12     	; 0x736 <vfprintf+0xa4>
 72a:	fa e0       	ldi	r31, 0x0A	; 10
 72c:	5f 9e       	mul	r5, r31
 72e:	30 0d       	add	r19, r0
 730:	11 24       	eor	r1, r1
 732:	53 2e       	mov	r5, r19
 734:	13 c0       	rjmp	.+38     	; 0x75c <vfprintf+0xca>
 736:	8a e0       	ldi	r24, 0x0A	; 10
 738:	38 9e       	mul	r3, r24
 73a:	30 0d       	add	r19, r0
 73c:	11 24       	eor	r1, r1
 73e:	33 2e       	mov	r3, r19
 740:	20 62       	ori	r18, 0x20	; 32
 742:	0c c0       	rjmp	.+24     	; 0x75c <vfprintf+0xca>
 744:	8e 32       	cpi	r24, 0x2E	; 46
 746:	21 f4       	brne	.+8      	; 0x750 <vfprintf+0xbe>
 748:	26 fd       	sbrc	r18, 6
 74a:	6b c1       	rjmp	.+726    	; 0xa22 <__stack+0x123>
 74c:	20 64       	ori	r18, 0x40	; 64
 74e:	06 c0       	rjmp	.+12     	; 0x75c <vfprintf+0xca>
 750:	8c 36       	cpi	r24, 0x6C	; 108
 752:	11 f4       	brne	.+4      	; 0x758 <vfprintf+0xc6>
 754:	20 68       	ori	r18, 0x80	; 128
 756:	02 c0       	rjmp	.+4      	; 0x75c <vfprintf+0xca>
 758:	88 36       	cpi	r24, 0x68	; 104
 75a:	41 f4       	brne	.+16     	; 0x76c <vfprintf+0xda>
 75c:	f6 01       	movw	r30, r12
 75e:	93 fd       	sbrc	r25, 3
 760:	85 91       	lpm	r24, Z+
 762:	93 ff       	sbrs	r25, 3
 764:	81 91       	ld	r24, Z+
 766:	6f 01       	movw	r12, r30
 768:	81 11       	cpse	r24, r1
 76a:	c1 cf       	rjmp	.-126    	; 0x6ee <vfprintf+0x5c>
 76c:	98 2f       	mov	r25, r24
 76e:	9f 7d       	andi	r25, 0xDF	; 223
 770:	95 54       	subi	r25, 0x45	; 69
 772:	93 30       	cpi	r25, 0x03	; 3
 774:	28 f4       	brcc	.+10     	; 0x780 <vfprintf+0xee>
 776:	0c 5f       	subi	r16, 0xFC	; 252
 778:	1f 4f       	sbci	r17, 0xFF	; 255
 77a:	ff e3       	ldi	r31, 0x3F	; 63
 77c:	f9 83       	std	Y+1, r31	; 0x01
 77e:	0d c0       	rjmp	.+26     	; 0x79a <vfprintf+0x108>
 780:	83 36       	cpi	r24, 0x63	; 99
 782:	31 f0       	breq	.+12     	; 0x790 <vfprintf+0xfe>
 784:	83 37       	cpi	r24, 0x73	; 115
 786:	71 f0       	breq	.+28     	; 0x7a4 <vfprintf+0x112>
 788:	83 35       	cpi	r24, 0x53	; 83
 78a:	09 f0       	breq	.+2      	; 0x78e <vfprintf+0xfc>
 78c:	5b c0       	rjmp	.+182    	; 0x844 <vfprintf+0x1b2>
 78e:	22 c0       	rjmp	.+68     	; 0x7d4 <vfprintf+0x142>
 790:	f8 01       	movw	r30, r16
 792:	80 81       	ld	r24, Z
 794:	89 83       	std	Y+1, r24	; 0x01
 796:	0e 5f       	subi	r16, 0xFE	; 254
 798:	1f 4f       	sbci	r17, 0xFF	; 255
 79a:	44 24       	eor	r4, r4
 79c:	43 94       	inc	r4
 79e:	51 2c       	mov	r5, r1
 7a0:	54 01       	movw	r10, r8
 7a2:	15 c0       	rjmp	.+42     	; 0x7ce <vfprintf+0x13c>
 7a4:	38 01       	movw	r6, r16
 7a6:	f2 e0       	ldi	r31, 0x02	; 2
 7a8:	6f 0e       	add	r6, r31
 7aa:	71 1c       	adc	r7, r1
 7ac:	f8 01       	movw	r30, r16
 7ae:	a0 80       	ld	r10, Z
 7b0:	b1 80       	ldd	r11, Z+1	; 0x01
 7b2:	26 ff       	sbrs	r18, 6
 7b4:	03 c0       	rjmp	.+6      	; 0x7bc <vfprintf+0x12a>
 7b6:	65 2d       	mov	r22, r5
 7b8:	70 e0       	ldi	r23, 0x00	; 0
 7ba:	02 c0       	rjmp	.+4      	; 0x7c0 <vfprintf+0x12e>
 7bc:	6f ef       	ldi	r22, 0xFF	; 255
 7be:	7f ef       	ldi	r23, 0xFF	; 255
 7c0:	c5 01       	movw	r24, r10
 7c2:	2c 87       	std	Y+12, r18	; 0x0c
 7c4:	0e 94 26 05 	call	0xa4c	; 0xa4c <strnlen>
 7c8:	2c 01       	movw	r4, r24
 7ca:	83 01       	movw	r16, r6
 7cc:	2c 85       	ldd	r18, Y+12	; 0x0c
 7ce:	2f 77       	andi	r18, 0x7F	; 127
 7d0:	22 2e       	mov	r2, r18
 7d2:	17 c0       	rjmp	.+46     	; 0x802 <vfprintf+0x170>
 7d4:	38 01       	movw	r6, r16
 7d6:	f2 e0       	ldi	r31, 0x02	; 2
 7d8:	6f 0e       	add	r6, r31
 7da:	71 1c       	adc	r7, r1
 7dc:	f8 01       	movw	r30, r16
 7de:	a0 80       	ld	r10, Z
 7e0:	b1 80       	ldd	r11, Z+1	; 0x01
 7e2:	26 ff       	sbrs	r18, 6
 7e4:	03 c0       	rjmp	.+6      	; 0x7ec <vfprintf+0x15a>
 7e6:	65 2d       	mov	r22, r5
 7e8:	70 e0       	ldi	r23, 0x00	; 0
 7ea:	02 c0       	rjmp	.+4      	; 0x7f0 <vfprintf+0x15e>
 7ec:	6f ef       	ldi	r22, 0xFF	; 255
 7ee:	7f ef       	ldi	r23, 0xFF	; 255
 7f0:	c5 01       	movw	r24, r10
 7f2:	2c 87       	std	Y+12, r18	; 0x0c
 7f4:	0e 94 1b 05 	call	0xa36	; 0xa36 <strnlen_P>
 7f8:	2c 01       	movw	r4, r24
 7fa:	2c 85       	ldd	r18, Y+12	; 0x0c
 7fc:	20 68       	ori	r18, 0x80	; 128
 7fe:	22 2e       	mov	r2, r18
 800:	83 01       	movw	r16, r6
 802:	23 fc       	sbrc	r2, 3
 804:	1b c0       	rjmp	.+54     	; 0x83c <vfprintf+0x1aa>
 806:	83 2d       	mov	r24, r3
 808:	90 e0       	ldi	r25, 0x00	; 0
 80a:	48 16       	cp	r4, r24
 80c:	59 06       	cpc	r5, r25
 80e:	b0 f4       	brcc	.+44     	; 0x83c <vfprintf+0x1aa>
 810:	b7 01       	movw	r22, r14
 812:	80 e2       	ldi	r24, 0x20	; 32
 814:	90 e0       	ldi	r25, 0x00	; 0
 816:	0e 94 31 05 	call	0xa62	; 0xa62 <fputc>
 81a:	3a 94       	dec	r3
 81c:	f4 cf       	rjmp	.-24     	; 0x806 <vfprintf+0x174>
 81e:	f5 01       	movw	r30, r10
 820:	27 fc       	sbrc	r2, 7
 822:	85 91       	lpm	r24, Z+
 824:	27 fe       	sbrs	r2, 7
 826:	81 91       	ld	r24, Z+
 828:	5f 01       	movw	r10, r30
 82a:	b7 01       	movw	r22, r14
 82c:	90 e0       	ldi	r25, 0x00	; 0
 82e:	0e 94 31 05 	call	0xa62	; 0xa62 <fputc>
 832:	31 10       	cpse	r3, r1
 834:	3a 94       	dec	r3
 836:	f1 e0       	ldi	r31, 0x01	; 1
 838:	4f 1a       	sub	r4, r31
 83a:	51 08       	sbc	r5, r1
 83c:	41 14       	cp	r4, r1
 83e:	51 04       	cpc	r5, r1
 840:	71 f7       	brne	.-36     	; 0x81e <vfprintf+0x18c>
 842:	e5 c0       	rjmp	.+458    	; 0xa0e <__stack+0x10f>
 844:	84 36       	cpi	r24, 0x64	; 100
 846:	11 f0       	breq	.+4      	; 0x84c <vfprintf+0x1ba>
 848:	89 36       	cpi	r24, 0x69	; 105
 84a:	39 f5       	brne	.+78     	; 0x89a <vfprintf+0x208>
 84c:	f8 01       	movw	r30, r16
 84e:	27 ff       	sbrs	r18, 7
 850:	07 c0       	rjmp	.+14     	; 0x860 <vfprintf+0x1ce>
 852:	60 81       	ld	r22, Z
 854:	71 81       	ldd	r23, Z+1	; 0x01
 856:	82 81       	ldd	r24, Z+2	; 0x02
 858:	93 81       	ldd	r25, Z+3	; 0x03
 85a:	0c 5f       	subi	r16, 0xFC	; 252
 85c:	1f 4f       	sbci	r17, 0xFF	; 255
 85e:	08 c0       	rjmp	.+16     	; 0x870 <vfprintf+0x1de>
 860:	60 81       	ld	r22, Z
 862:	71 81       	ldd	r23, Z+1	; 0x01
 864:	88 27       	eor	r24, r24
 866:	77 fd       	sbrc	r23, 7
 868:	80 95       	com	r24
 86a:	98 2f       	mov	r25, r24
 86c:	0e 5f       	subi	r16, 0xFE	; 254
 86e:	1f 4f       	sbci	r17, 0xFF	; 255
 870:	2f 76       	andi	r18, 0x6F	; 111
 872:	b2 2e       	mov	r11, r18
 874:	97 ff       	sbrs	r25, 7
 876:	09 c0       	rjmp	.+18     	; 0x88a <vfprintf+0x1f8>
 878:	90 95       	com	r25
 87a:	80 95       	com	r24
 87c:	70 95       	com	r23
 87e:	61 95       	neg	r22
 880:	7f 4f       	sbci	r23, 0xFF	; 255
 882:	8f 4f       	sbci	r24, 0xFF	; 255
 884:	9f 4f       	sbci	r25, 0xFF	; 255
 886:	20 68       	ori	r18, 0x80	; 128
 888:	b2 2e       	mov	r11, r18
 88a:	2a e0       	ldi	r18, 0x0A	; 10
 88c:	30 e0       	ldi	r19, 0x00	; 0
 88e:	a4 01       	movw	r20, r8
 890:	0e 94 63 05 	call	0xac6	; 0xac6 <__ultoa_invert>
 894:	a8 2e       	mov	r10, r24
 896:	a8 18       	sub	r10, r8
 898:	44 c0       	rjmp	.+136    	; 0x922 <__stack+0x23>
 89a:	85 37       	cpi	r24, 0x75	; 117
 89c:	29 f4       	brne	.+10     	; 0x8a8 <vfprintf+0x216>
 89e:	2f 7e       	andi	r18, 0xEF	; 239
 8a0:	b2 2e       	mov	r11, r18
 8a2:	2a e0       	ldi	r18, 0x0A	; 10
 8a4:	30 e0       	ldi	r19, 0x00	; 0
 8a6:	25 c0       	rjmp	.+74     	; 0x8f2 <vfprintf+0x260>
 8a8:	f2 2f       	mov	r31, r18
 8aa:	f9 7f       	andi	r31, 0xF9	; 249
 8ac:	bf 2e       	mov	r11, r31
 8ae:	8f 36       	cpi	r24, 0x6F	; 111
 8b0:	c1 f0       	breq	.+48     	; 0x8e2 <vfprintf+0x250>
 8b2:	18 f4       	brcc	.+6      	; 0x8ba <vfprintf+0x228>
 8b4:	88 35       	cpi	r24, 0x58	; 88
 8b6:	79 f0       	breq	.+30     	; 0x8d6 <vfprintf+0x244>
 8b8:	b4 c0       	rjmp	.+360    	; 0xa22 <__stack+0x123>
 8ba:	80 37       	cpi	r24, 0x70	; 112
 8bc:	19 f0       	breq	.+6      	; 0x8c4 <vfprintf+0x232>
 8be:	88 37       	cpi	r24, 0x78	; 120
 8c0:	21 f0       	breq	.+8      	; 0x8ca <vfprintf+0x238>
 8c2:	af c0       	rjmp	.+350    	; 0xa22 <__stack+0x123>
 8c4:	2f 2f       	mov	r18, r31
 8c6:	20 61       	ori	r18, 0x10	; 16
 8c8:	b2 2e       	mov	r11, r18
 8ca:	b4 fe       	sbrs	r11, 4
 8cc:	0d c0       	rjmp	.+26     	; 0x8e8 <vfprintf+0x256>
 8ce:	8b 2d       	mov	r24, r11
 8d0:	84 60       	ori	r24, 0x04	; 4
 8d2:	b8 2e       	mov	r11, r24
 8d4:	09 c0       	rjmp	.+18     	; 0x8e8 <vfprintf+0x256>
 8d6:	24 ff       	sbrs	r18, 4
 8d8:	0a c0       	rjmp	.+20     	; 0x8ee <vfprintf+0x25c>
 8da:	9f 2f       	mov	r25, r31
 8dc:	96 60       	ori	r25, 0x06	; 6
 8de:	b9 2e       	mov	r11, r25
 8e0:	06 c0       	rjmp	.+12     	; 0x8ee <vfprintf+0x25c>
 8e2:	28 e0       	ldi	r18, 0x08	; 8
 8e4:	30 e0       	ldi	r19, 0x00	; 0
 8e6:	05 c0       	rjmp	.+10     	; 0x8f2 <vfprintf+0x260>
 8e8:	20 e1       	ldi	r18, 0x10	; 16
 8ea:	30 e0       	ldi	r19, 0x00	; 0
 8ec:	02 c0       	rjmp	.+4      	; 0x8f2 <vfprintf+0x260>
 8ee:	20 e1       	ldi	r18, 0x10	; 16
 8f0:	32 e0       	ldi	r19, 0x02	; 2
 8f2:	f8 01       	movw	r30, r16
 8f4:	b7 fe       	sbrs	r11, 7
 8f6:	07 c0       	rjmp	.+14     	; 0x906 <__stack+0x7>
 8f8:	60 81       	ld	r22, Z
 8fa:	71 81       	ldd	r23, Z+1	; 0x01
 8fc:	82 81       	ldd	r24, Z+2	; 0x02
 8fe:	93 81       	ldd	r25, Z+3	; 0x03
 900:	0c 5f       	subi	r16, 0xFC	; 252
 902:	1f 4f       	sbci	r17, 0xFF	; 255
 904:	06 c0       	rjmp	.+12     	; 0x912 <__stack+0x13>
 906:	60 81       	ld	r22, Z
 908:	71 81       	ldd	r23, Z+1	; 0x01
 90a:	80 e0       	ldi	r24, 0x00	; 0
 90c:	90 e0       	ldi	r25, 0x00	; 0
 90e:	0e 5f       	subi	r16, 0xFE	; 254
 910:	1f 4f       	sbci	r17, 0xFF	; 255
 912:	a4 01       	movw	r20, r8
 914:	0e 94 63 05 	call	0xac6	; 0xac6 <__ultoa_invert>
 918:	a8 2e       	mov	r10, r24
 91a:	a8 18       	sub	r10, r8
 91c:	fb 2d       	mov	r31, r11
 91e:	ff 77       	andi	r31, 0x7F	; 127
 920:	bf 2e       	mov	r11, r31
 922:	b6 fe       	sbrs	r11, 6
 924:	0b c0       	rjmp	.+22     	; 0x93c <__stack+0x3d>
 926:	2b 2d       	mov	r18, r11
 928:	2e 7f       	andi	r18, 0xFE	; 254
 92a:	a5 14       	cp	r10, r5
 92c:	50 f4       	brcc	.+20     	; 0x942 <__stack+0x43>
 92e:	b4 fe       	sbrs	r11, 4
 930:	0a c0       	rjmp	.+20     	; 0x946 <__stack+0x47>
 932:	b2 fc       	sbrc	r11, 2
 934:	08 c0       	rjmp	.+16     	; 0x946 <__stack+0x47>
 936:	2b 2d       	mov	r18, r11
 938:	2e 7e       	andi	r18, 0xEE	; 238
 93a:	05 c0       	rjmp	.+10     	; 0x946 <__stack+0x47>
 93c:	7a 2c       	mov	r7, r10
 93e:	2b 2d       	mov	r18, r11
 940:	03 c0       	rjmp	.+6      	; 0x948 <__stack+0x49>
 942:	7a 2c       	mov	r7, r10
 944:	01 c0       	rjmp	.+2      	; 0x948 <__stack+0x49>
 946:	75 2c       	mov	r7, r5
 948:	24 ff       	sbrs	r18, 4
 94a:	0d c0       	rjmp	.+26     	; 0x966 <__stack+0x67>
 94c:	fe 01       	movw	r30, r28
 94e:	ea 0d       	add	r30, r10
 950:	f1 1d       	adc	r31, r1
 952:	80 81       	ld	r24, Z
 954:	80 33       	cpi	r24, 0x30	; 48
 956:	11 f4       	brne	.+4      	; 0x95c <__stack+0x5d>
 958:	29 7e       	andi	r18, 0xE9	; 233
 95a:	09 c0       	rjmp	.+18     	; 0x96e <__stack+0x6f>
 95c:	22 ff       	sbrs	r18, 2
 95e:	06 c0       	rjmp	.+12     	; 0x96c <__stack+0x6d>
 960:	73 94       	inc	r7
 962:	73 94       	inc	r7
 964:	04 c0       	rjmp	.+8      	; 0x96e <__stack+0x6f>
 966:	82 2f       	mov	r24, r18
 968:	86 78       	andi	r24, 0x86	; 134
 96a:	09 f0       	breq	.+2      	; 0x96e <__stack+0x6f>
 96c:	73 94       	inc	r7
 96e:	23 fd       	sbrc	r18, 3
 970:	13 c0       	rjmp	.+38     	; 0x998 <__stack+0x99>
 972:	20 ff       	sbrs	r18, 0
 974:	06 c0       	rjmp	.+12     	; 0x982 <__stack+0x83>
 976:	5a 2c       	mov	r5, r10
 978:	73 14       	cp	r7, r3
 97a:	18 f4       	brcc	.+6      	; 0x982 <__stack+0x83>
 97c:	53 0c       	add	r5, r3
 97e:	57 18       	sub	r5, r7
 980:	73 2c       	mov	r7, r3
 982:	73 14       	cp	r7, r3
 984:	68 f4       	brcc	.+26     	; 0x9a0 <__stack+0xa1>
 986:	b7 01       	movw	r22, r14
 988:	80 e2       	ldi	r24, 0x20	; 32
 98a:	90 e0       	ldi	r25, 0x00	; 0
 98c:	2c 87       	std	Y+12, r18	; 0x0c
 98e:	0e 94 31 05 	call	0xa62	; 0xa62 <fputc>
 992:	73 94       	inc	r7
 994:	2c 85       	ldd	r18, Y+12	; 0x0c
 996:	f5 cf       	rjmp	.-22     	; 0x982 <__stack+0x83>
 998:	73 14       	cp	r7, r3
 99a:	10 f4       	brcc	.+4      	; 0x9a0 <__stack+0xa1>
 99c:	37 18       	sub	r3, r7
 99e:	01 c0       	rjmp	.+2      	; 0x9a2 <__stack+0xa3>
 9a0:	31 2c       	mov	r3, r1
 9a2:	24 ff       	sbrs	r18, 4
 9a4:	12 c0       	rjmp	.+36     	; 0x9ca <__stack+0xcb>
 9a6:	b7 01       	movw	r22, r14
 9a8:	80 e3       	ldi	r24, 0x30	; 48
 9aa:	90 e0       	ldi	r25, 0x00	; 0
 9ac:	2c 87       	std	Y+12, r18	; 0x0c
 9ae:	0e 94 31 05 	call	0xa62	; 0xa62 <fputc>
 9b2:	2c 85       	ldd	r18, Y+12	; 0x0c
 9b4:	22 ff       	sbrs	r18, 2
 9b6:	17 c0       	rjmp	.+46     	; 0x9e6 <__stack+0xe7>
 9b8:	21 ff       	sbrs	r18, 1
 9ba:	03 c0       	rjmp	.+6      	; 0x9c2 <__stack+0xc3>
 9bc:	88 e5       	ldi	r24, 0x58	; 88
 9be:	90 e0       	ldi	r25, 0x00	; 0
 9c0:	02 c0       	rjmp	.+4      	; 0x9c6 <__stack+0xc7>
 9c2:	88 e7       	ldi	r24, 0x78	; 120
 9c4:	90 e0       	ldi	r25, 0x00	; 0
 9c6:	b7 01       	movw	r22, r14
 9c8:	0c c0       	rjmp	.+24     	; 0x9e2 <__stack+0xe3>
 9ca:	82 2f       	mov	r24, r18
 9cc:	86 78       	andi	r24, 0x86	; 134
 9ce:	59 f0       	breq	.+22     	; 0x9e6 <__stack+0xe7>
 9d0:	21 fd       	sbrc	r18, 1
 9d2:	02 c0       	rjmp	.+4      	; 0x9d8 <__stack+0xd9>
 9d4:	80 e2       	ldi	r24, 0x20	; 32
 9d6:	01 c0       	rjmp	.+2      	; 0x9da <__stack+0xdb>
 9d8:	8b e2       	ldi	r24, 0x2B	; 43
 9da:	27 fd       	sbrc	r18, 7
 9dc:	8d e2       	ldi	r24, 0x2D	; 45
 9de:	b7 01       	movw	r22, r14
 9e0:	90 e0       	ldi	r25, 0x00	; 0
 9e2:	0e 94 31 05 	call	0xa62	; 0xa62 <fputc>
 9e6:	a5 14       	cp	r10, r5
 9e8:	38 f4       	brcc	.+14     	; 0x9f8 <__stack+0xf9>
 9ea:	b7 01       	movw	r22, r14
 9ec:	80 e3       	ldi	r24, 0x30	; 48
 9ee:	90 e0       	ldi	r25, 0x00	; 0
 9f0:	0e 94 31 05 	call	0xa62	; 0xa62 <fputc>
 9f4:	5a 94       	dec	r5
 9f6:	f7 cf       	rjmp	.-18     	; 0x9e6 <__stack+0xe7>
 9f8:	aa 94       	dec	r10
 9fa:	f4 01       	movw	r30, r8
 9fc:	ea 0d       	add	r30, r10
 9fe:	f1 1d       	adc	r31, r1
 a00:	80 81       	ld	r24, Z
 a02:	b7 01       	movw	r22, r14
 a04:	90 e0       	ldi	r25, 0x00	; 0
 a06:	0e 94 31 05 	call	0xa62	; 0xa62 <fputc>
 a0a:	a1 10       	cpse	r10, r1
 a0c:	f5 cf       	rjmp	.-22     	; 0x9f8 <__stack+0xf9>
 a0e:	33 20       	and	r3, r3
 a10:	09 f4       	brne	.+2      	; 0xa14 <__stack+0x115>
 a12:	51 ce       	rjmp	.-862    	; 0x6b6 <vfprintf+0x24>
 a14:	b7 01       	movw	r22, r14
 a16:	80 e2       	ldi	r24, 0x20	; 32
 a18:	90 e0       	ldi	r25, 0x00	; 0
 a1a:	0e 94 31 05 	call	0xa62	; 0xa62 <fputc>
 a1e:	3a 94       	dec	r3
 a20:	f6 cf       	rjmp	.-20     	; 0xa0e <__stack+0x10f>
 a22:	f7 01       	movw	r30, r14
 a24:	86 81       	ldd	r24, Z+6	; 0x06
 a26:	97 81       	ldd	r25, Z+7	; 0x07
 a28:	02 c0       	rjmp	.+4      	; 0xa2e <__stack+0x12f>
 a2a:	8f ef       	ldi	r24, 0xFF	; 255
 a2c:	9f ef       	ldi	r25, 0xFF	; 255
 a2e:	2c 96       	adiw	r28, 0x0c	; 12
 a30:	e2 e1       	ldi	r30, 0x12	; 18
 a32:	0c 94 dd 05 	jmp	0xbba	; 0xbba <__epilogue_restores__>

00000a36 <strnlen_P>:
 a36:	fc 01       	movw	r30, r24
 a38:	05 90       	lpm	r0, Z+
 a3a:	61 50       	subi	r22, 0x01	; 1
 a3c:	70 40       	sbci	r23, 0x00	; 0
 a3e:	01 10       	cpse	r0, r1
 a40:	d8 f7       	brcc	.-10     	; 0xa38 <strnlen_P+0x2>
 a42:	80 95       	com	r24
 a44:	90 95       	com	r25
 a46:	8e 0f       	add	r24, r30
 a48:	9f 1f       	adc	r25, r31
 a4a:	08 95       	ret

00000a4c <strnlen>:
 a4c:	fc 01       	movw	r30, r24
 a4e:	61 50       	subi	r22, 0x01	; 1
 a50:	70 40       	sbci	r23, 0x00	; 0
 a52:	01 90       	ld	r0, Z+
 a54:	01 10       	cpse	r0, r1
 a56:	d8 f7       	brcc	.-10     	; 0xa4e <strnlen+0x2>
 a58:	80 95       	com	r24
 a5a:	90 95       	com	r25
 a5c:	8e 0f       	add	r24, r30
 a5e:	9f 1f       	adc	r25, r31
 a60:	08 95       	ret

00000a62 <fputc>:
 a62:	0f 93       	push	r16
 a64:	1f 93       	push	r17
 a66:	cf 93       	push	r28
 a68:	df 93       	push	r29
 a6a:	18 2f       	mov	r17, r24
 a6c:	09 2f       	mov	r16, r25
 a6e:	eb 01       	movw	r28, r22
 a70:	8b 81       	ldd	r24, Y+3	; 0x03
 a72:	81 fd       	sbrc	r24, 1
 a74:	03 c0       	rjmp	.+6      	; 0xa7c <fputc+0x1a>
 a76:	8f ef       	ldi	r24, 0xFF	; 255
 a78:	9f ef       	ldi	r25, 0xFF	; 255
 a7a:	20 c0       	rjmp	.+64     	; 0xabc <fputc+0x5a>
 a7c:	82 ff       	sbrs	r24, 2
 a7e:	10 c0       	rjmp	.+32     	; 0xaa0 <fputc+0x3e>
 a80:	4e 81       	ldd	r20, Y+6	; 0x06
 a82:	5f 81       	ldd	r21, Y+7	; 0x07
 a84:	2c 81       	ldd	r18, Y+4	; 0x04
 a86:	3d 81       	ldd	r19, Y+5	; 0x05
 a88:	42 17       	cp	r20, r18
 a8a:	53 07       	cpc	r21, r19
 a8c:	7c f4       	brge	.+30     	; 0xaac <fputc+0x4a>
 a8e:	e8 81       	ld	r30, Y
 a90:	f9 81       	ldd	r31, Y+1	; 0x01
 a92:	9f 01       	movw	r18, r30
 a94:	2f 5f       	subi	r18, 0xFF	; 255
 a96:	3f 4f       	sbci	r19, 0xFF	; 255
 a98:	39 83       	std	Y+1, r19	; 0x01
 a9a:	28 83       	st	Y, r18
 a9c:	10 83       	st	Z, r17
 a9e:	06 c0       	rjmp	.+12     	; 0xaac <fputc+0x4a>
 aa0:	e8 85       	ldd	r30, Y+8	; 0x08
 aa2:	f9 85       	ldd	r31, Y+9	; 0x09
 aa4:	81 2f       	mov	r24, r17
 aa6:	09 95       	icall
 aa8:	89 2b       	or	r24, r25
 aaa:	29 f7       	brne	.-54     	; 0xa76 <fputc+0x14>
 aac:	2e 81       	ldd	r18, Y+6	; 0x06
 aae:	3f 81       	ldd	r19, Y+7	; 0x07
 ab0:	2f 5f       	subi	r18, 0xFF	; 255
 ab2:	3f 4f       	sbci	r19, 0xFF	; 255
 ab4:	3f 83       	std	Y+7, r19	; 0x07
 ab6:	2e 83       	std	Y+6, r18	; 0x06
 ab8:	81 2f       	mov	r24, r17
 aba:	90 2f       	mov	r25, r16
 abc:	df 91       	pop	r29
 abe:	cf 91       	pop	r28
 ac0:	1f 91       	pop	r17
 ac2:	0f 91       	pop	r16
 ac4:	08 95       	ret

00000ac6 <__ultoa_invert>:
 ac6:	fa 01       	movw	r30, r20
 ac8:	aa 27       	eor	r26, r26
 aca:	28 30       	cpi	r18, 0x08	; 8
 acc:	51 f1       	breq	.+84     	; 0xb22 <__ultoa_invert+0x5c>
 ace:	20 31       	cpi	r18, 0x10	; 16
 ad0:	81 f1       	breq	.+96     	; 0xb32 <__ultoa_invert+0x6c>
 ad2:	e8 94       	clt
 ad4:	6f 93       	push	r22
 ad6:	6e 7f       	andi	r22, 0xFE	; 254
 ad8:	6e 5f       	subi	r22, 0xFE	; 254
 ada:	7f 4f       	sbci	r23, 0xFF	; 255
 adc:	8f 4f       	sbci	r24, 0xFF	; 255
 ade:	9f 4f       	sbci	r25, 0xFF	; 255
 ae0:	af 4f       	sbci	r26, 0xFF	; 255
 ae2:	b1 e0       	ldi	r27, 0x01	; 1
 ae4:	3e d0       	rcall	.+124    	; 0xb62 <__ultoa_invert+0x9c>
 ae6:	b4 e0       	ldi	r27, 0x04	; 4
 ae8:	3c d0       	rcall	.+120    	; 0xb62 <__ultoa_invert+0x9c>
 aea:	67 0f       	add	r22, r23
 aec:	78 1f       	adc	r23, r24
 aee:	89 1f       	adc	r24, r25
 af0:	9a 1f       	adc	r25, r26
 af2:	a1 1d       	adc	r26, r1
 af4:	68 0f       	add	r22, r24
 af6:	79 1f       	adc	r23, r25
 af8:	8a 1f       	adc	r24, r26
 afa:	91 1d       	adc	r25, r1
 afc:	a1 1d       	adc	r26, r1
 afe:	6a 0f       	add	r22, r26
 b00:	71 1d       	adc	r23, r1
 b02:	81 1d       	adc	r24, r1
 b04:	91 1d       	adc	r25, r1
 b06:	a1 1d       	adc	r26, r1
 b08:	20 d0       	rcall	.+64     	; 0xb4a <__ultoa_invert+0x84>
 b0a:	09 f4       	brne	.+2      	; 0xb0e <__ultoa_invert+0x48>
 b0c:	68 94       	set
 b0e:	3f 91       	pop	r19
 b10:	2a e0       	ldi	r18, 0x0A	; 10
 b12:	26 9f       	mul	r18, r22
 b14:	11 24       	eor	r1, r1
 b16:	30 19       	sub	r19, r0
 b18:	30 5d       	subi	r19, 0xD0	; 208
 b1a:	31 93       	st	Z+, r19
 b1c:	de f6       	brtc	.-74     	; 0xad4 <__ultoa_invert+0xe>
 b1e:	cf 01       	movw	r24, r30
 b20:	08 95       	ret
 b22:	46 2f       	mov	r20, r22
 b24:	47 70       	andi	r20, 0x07	; 7
 b26:	40 5d       	subi	r20, 0xD0	; 208
 b28:	41 93       	st	Z+, r20
 b2a:	b3 e0       	ldi	r27, 0x03	; 3
 b2c:	0f d0       	rcall	.+30     	; 0xb4c <__ultoa_invert+0x86>
 b2e:	c9 f7       	brne	.-14     	; 0xb22 <__ultoa_invert+0x5c>
 b30:	f6 cf       	rjmp	.-20     	; 0xb1e <__ultoa_invert+0x58>
 b32:	46 2f       	mov	r20, r22
 b34:	4f 70       	andi	r20, 0x0F	; 15
 b36:	40 5d       	subi	r20, 0xD0	; 208
 b38:	4a 33       	cpi	r20, 0x3A	; 58
 b3a:	18 f0       	brcs	.+6      	; 0xb42 <__ultoa_invert+0x7c>
 b3c:	49 5d       	subi	r20, 0xD9	; 217
 b3e:	31 fd       	sbrc	r19, 1
 b40:	40 52       	subi	r20, 0x20	; 32
 b42:	41 93       	st	Z+, r20
 b44:	02 d0       	rcall	.+4      	; 0xb4a <__ultoa_invert+0x84>
 b46:	a9 f7       	brne	.-22     	; 0xb32 <__ultoa_invert+0x6c>
 b48:	ea cf       	rjmp	.-44     	; 0xb1e <__ultoa_invert+0x58>
 b4a:	b4 e0       	ldi	r27, 0x04	; 4
 b4c:	a6 95       	lsr	r26
 b4e:	97 95       	ror	r25
 b50:	87 95       	ror	r24
 b52:	77 95       	ror	r23
 b54:	67 95       	ror	r22
 b56:	ba 95       	dec	r27
 b58:	c9 f7       	brne	.-14     	; 0xb4c <__ultoa_invert+0x86>
 b5a:	00 97       	sbiw	r24, 0x00	; 0
 b5c:	61 05       	cpc	r22, r1
 b5e:	71 05       	cpc	r23, r1
 b60:	08 95       	ret
 b62:	9b 01       	movw	r18, r22
 b64:	ac 01       	movw	r20, r24
 b66:	0a 2e       	mov	r0, r26
 b68:	06 94       	lsr	r0
 b6a:	57 95       	ror	r21
 b6c:	47 95       	ror	r20
 b6e:	37 95       	ror	r19
 b70:	27 95       	ror	r18
 b72:	ba 95       	dec	r27
 b74:	c9 f7       	brne	.-14     	; 0xb68 <__ultoa_invert+0xa2>
 b76:	62 0f       	add	r22, r18
 b78:	73 1f       	adc	r23, r19
 b7a:	84 1f       	adc	r24, r20
 b7c:	95 1f       	adc	r25, r21
 b7e:	a0 1d       	adc	r26, r0
 b80:	08 95       	ret

00000b82 <__prologue_saves__>:
 b82:	2f 92       	push	r2
 b84:	3f 92       	push	r3
 b86:	4f 92       	push	r4
 b88:	5f 92       	push	r5
 b8a:	6f 92       	push	r6
 b8c:	7f 92       	push	r7
 b8e:	8f 92       	push	r8
 b90:	9f 92       	push	r9
 b92:	af 92       	push	r10
 b94:	bf 92       	push	r11
 b96:	cf 92       	push	r12
 b98:	df 92       	push	r13
 b9a:	ef 92       	push	r14
 b9c:	ff 92       	push	r15
 b9e:	0f 93       	push	r16
 ba0:	1f 93       	push	r17
 ba2:	cf 93       	push	r28
 ba4:	df 93       	push	r29
 ba6:	cd b7       	in	r28, 0x3d	; 61
 ba8:	de b7       	in	r29, 0x3e	; 62
 baa:	ca 1b       	sub	r28, r26
 bac:	db 0b       	sbc	r29, r27
 bae:	0f b6       	in	r0, 0x3f	; 63
 bb0:	f8 94       	cli
 bb2:	de bf       	out	0x3e, r29	; 62
 bb4:	0f be       	out	0x3f, r0	; 63
 bb6:	cd bf       	out	0x3d, r28	; 61
 bb8:	09 94       	ijmp

00000bba <__epilogue_restores__>:
 bba:	2a 88       	ldd	r2, Y+18	; 0x12
 bbc:	39 88       	ldd	r3, Y+17	; 0x11
 bbe:	48 88       	ldd	r4, Y+16	; 0x10
 bc0:	5f 84       	ldd	r5, Y+15	; 0x0f
 bc2:	6e 84       	ldd	r6, Y+14	; 0x0e
 bc4:	7d 84       	ldd	r7, Y+13	; 0x0d
 bc6:	8c 84       	ldd	r8, Y+12	; 0x0c
 bc8:	9b 84       	ldd	r9, Y+11	; 0x0b
 bca:	aa 84       	ldd	r10, Y+10	; 0x0a
 bcc:	b9 84       	ldd	r11, Y+9	; 0x09
 bce:	c8 84       	ldd	r12, Y+8	; 0x08
 bd0:	df 80       	ldd	r13, Y+7	; 0x07
 bd2:	ee 80       	ldd	r14, Y+6	; 0x06
 bd4:	fd 80       	ldd	r15, Y+5	; 0x05
 bd6:	0c 81       	ldd	r16, Y+4	; 0x04
 bd8:	1b 81       	ldd	r17, Y+3	; 0x03
 bda:	aa 81       	ldd	r26, Y+2	; 0x02
 bdc:	b9 81       	ldd	r27, Y+1	; 0x01
 bde:	ce 0f       	add	r28, r30
 be0:	d1 1d       	adc	r29, r1
 be2:	0f b6       	in	r0, 0x3f	; 63
 be4:	f8 94       	cli
 be6:	de bf       	out	0x3e, r29	; 62
 be8:	0f be       	out	0x3f, r0	; 63
 bea:	cd bf       	out	0x3d, r28	; 61
 bec:	ed 01       	movw	r28, r26
 bee:	08 95       	ret

00000bf0 <_exit>:
 bf0:	f8 94       	cli

00000bf2 <__stop_program>:
 bf2:	ff cf       	rjmp	.-2      	; 0xbf2 <__stop_program>
